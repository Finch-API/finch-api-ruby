module FinchAPI
  module Models
    module Payroll
      type pay_group_list_response =
        {
          id: String,
          name: String,
          pay_frequencies: ::Array[FinchAPI::Models::Payroll::PayGroupListResponse::pay_frequency]
        }

      class PayGroupListResponse < FinchAPI::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor name: String

        attr_accessor pay_frequencies: ::Array[FinchAPI::Models::Payroll::PayGroupListResponse::pay_frequency]

        def initialize: (
          id: String,
          name: String,
          pay_frequencies: ::Array[FinchAPI::Models::Payroll::PayGroupListResponse::pay_frequency]
        ) -> void

        def to_hash: -> {
          id: String,
          name: String,
          pay_frequencies: ::Array[FinchAPI::Models::Payroll::PayGroupListResponse::pay_frequency]
        }

        type pay_frequency =
          :annually
          | :bi_weekly
          | :daily
          | :monthly
          | :other
          | :quarterly
          | :semi_annually
          | :semi_monthly
          | :weekly

        module PayFrequency
          extend FinchAPI::Internal::Type::Enum

          ANNUALLY: :annually
          BI_WEEKLY: :bi_weekly
          DAILY: :daily
          MONTHLY: :monthly
          OTHER: :other
          QUARTERLY: :quarterly
          SEMI_ANNUALLY: :semi_annually
          SEMI_MONTHLY: :semi_monthly
          WEEKLY: :weekly

          def self?.values: -> ::Array[FinchAPI::Models::Payroll::PayGroupListResponse::pay_frequency]
        end
      end
    end
  end
end
