module FinchAPI
  module Models
    module Sandbox
      type directory_create_params =
        { body: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body] }
        & FinchAPI::Internal::Type::request_parameters

      class DirectoryCreateParams < FinchAPI::Internal::Type::BaseModel
        extend FinchAPI::Internal::Type::RequestParameters::Converter
        include FinchAPI::Internal::Type::RequestParameters

        attr_reader body: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body]?

        def body=: (
          ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body]
        ) -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body]

        def initialize: (
          ?body: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body],
          ?request_options: FinchAPI::request_opts
        ) -> void

        type body =
          {
            class_code: String?,
            custom_fields: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::CustomField],
            department: FinchAPI::Sandbox::DirectoryCreateParams::Body::Department?,
            dob: String?,
            emails: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::Email]?,
            employment: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment?,
            employment_status: FinchAPI::Sandbox::DirectoryCreateParams::Body::employment_status?,
            encrypted_ssn: String?,
            end_date: String?,
            ethnicity: FinchAPI::Sandbox::DirectoryCreateParams::Body::ethnicity?,
            first_name: String?,
            gender: FinchAPI::Sandbox::DirectoryCreateParams::Body::gender?,
            income: FinchAPI::Income?,
            income_history: ::Array[FinchAPI::Income?]?,
            is_active: bool?,
            last_name: String?,
            latest_rehire_date: String?,
            location: FinchAPI::Location?,
            manager: FinchAPI::Sandbox::DirectoryCreateParams::Body::Manager?,
            middle_name: String?,
            phone_numbers: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::PhoneNumber?]?,
            preferred_name: String?,
            residence: FinchAPI::Location?,
            source_id: String,
            ssn: String?,
            start_date: String?,
            title: String?
          }

        class Body < FinchAPI::Internal::Type::BaseModel
          attr_accessor class_code: String?

          attr_reader custom_fields: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::CustomField]?

          def custom_fields=: (
            ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::CustomField]
          ) -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::CustomField]

          attr_accessor department: FinchAPI::Sandbox::DirectoryCreateParams::Body::Department?

          attr_accessor dob: String?

          attr_accessor emails: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::Email]?

          attr_accessor employment: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment?

          attr_accessor employment_status: FinchAPI::Sandbox::DirectoryCreateParams::Body::employment_status?

          attr_accessor encrypted_ssn: String?

          attr_accessor end_date: String?

          attr_accessor ethnicity: FinchAPI::Sandbox::DirectoryCreateParams::Body::ethnicity?

          attr_accessor first_name: String?

          attr_accessor gender: FinchAPI::Sandbox::DirectoryCreateParams::Body::gender?

          attr_accessor income: FinchAPI::Income?

          attr_accessor income_history: ::Array[FinchAPI::Income?]?

          attr_accessor is_active: bool?

          attr_accessor last_name: String?

          attr_accessor latest_rehire_date: String?

          attr_accessor location: FinchAPI::Location?

          attr_accessor manager: FinchAPI::Sandbox::DirectoryCreateParams::Body::Manager?

          attr_accessor middle_name: String?

          attr_accessor phone_numbers: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::PhoneNumber?]?

          attr_accessor preferred_name: String?

          attr_accessor residence: FinchAPI::Location?

          attr_reader source_id: String?

          def source_id=: (String) -> String

          attr_accessor ssn: String?

          attr_accessor start_date: String?

          attr_accessor title: String?

          def initialize: (
            ?class_code: String?,
            ?custom_fields: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::CustomField],
            ?department: FinchAPI::Sandbox::DirectoryCreateParams::Body::Department?,
            ?dob: String?,
            ?emails: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::Email]?,
            ?employment: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment?,
            ?employment_status: FinchAPI::Sandbox::DirectoryCreateParams::Body::employment_status?,
            ?encrypted_ssn: String?,
            ?end_date: String?,
            ?ethnicity: FinchAPI::Sandbox::DirectoryCreateParams::Body::ethnicity?,
            ?first_name: String?,
            ?gender: FinchAPI::Sandbox::DirectoryCreateParams::Body::gender?,
            ?income: FinchAPI::Income?,
            ?income_history: ::Array[FinchAPI::Income?]?,
            ?is_active: bool?,
            ?last_name: String?,
            ?latest_rehire_date: String?,
            ?location: FinchAPI::Location?,
            ?manager: FinchAPI::Sandbox::DirectoryCreateParams::Body::Manager?,
            ?middle_name: String?,
            ?phone_numbers: ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::PhoneNumber?]?,
            ?preferred_name: String?,
            ?residence: FinchAPI::Location?,
            ?source_id: String,
            ?ssn: String?,
            ?start_date: String?,
            ?title: String?
          ) -> void

          type custom_field = { name: String?, value: top }

          class CustomField < FinchAPI::Internal::Type::BaseModel
            attr_accessor name: String?

            attr_reader value: top?

            def value=: (top) -> top

            def initialize: (?name: String?, ?value: top) -> void
          end

          type department = { name: String? }

          class Department < FinchAPI::Internal::Type::BaseModel
            attr_accessor name: String?

            def initialize: (?name: String?) -> void
          end

          type email =
            {
              data: String,
              type: FinchAPI::Sandbox::DirectoryCreateParams::Body::Email::type_?
            }

          class Email < FinchAPI::Internal::Type::BaseModel
            attr_reader data: String?

            def data=: (String) -> String

            attr_accessor type: FinchAPI::Sandbox::DirectoryCreateParams::Body::Email::type_?

            def initialize: (
              ?data: String,
              ?type: FinchAPI::Sandbox::DirectoryCreateParams::Body::Email::type_?
            ) -> void

            type type_ = :work | :personal

            module Type
              extend FinchAPI::Internal::Type::Enum

              WORK: :work
              PERSONAL: :personal

              def self?.values: -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::Email::type_]
            end
          end

          type employment =
            {
              subtype: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::subtype?,
              type: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::type_?
            }

          class Employment < FinchAPI::Internal::Type::BaseModel
            attr_accessor subtype: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::subtype?

            attr_accessor type: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::type_?

            def initialize: (
              ?subtype: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::subtype?,
              ?type: FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::type_?
            ) -> void

            type subtype =
              :full_time
              | :intern
              | :part_time
              | :temp
              | :seasonal
              | :individual_contractor

            module Subtype
              extend FinchAPI::Internal::Type::Enum

              FULL_TIME: :full_time
              INTERN: :intern
              PART_TIME: :part_time
              TEMP: :temp
              SEASONAL: :seasonal
              INDIVIDUAL_CONTRACTOR: :individual_contractor

              def self?.values: -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::subtype]
            end

            type type_ = :employee | :contractor

            module Type
              extend FinchAPI::Internal::Type::Enum

              EMPLOYEE: :employee
              CONTRACTOR: :contractor

              def self?.values: -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::Employment::type_]
            end
          end

          type employment_status =
            :active
            | :deceased
            | :leave
            | :onboarding
            | :prehire
            | :retired
            | :terminated

          module EmploymentStatus
            extend FinchAPI::Internal::Type::Enum

            ACTIVE: :active
            DECEASED: :deceased
            LEAVE: :leave
            ONBOARDING: :onboarding
            PREHIRE: :prehire
            RETIRED: :retired
            TERMINATED: :terminated

            def self?.values: -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::employment_status]
          end

          type ethnicity =
            :asian
            | :white
            | :black_or_african_american
            | :native_hawaiian_or_pacific_islander
            | :american_indian_or_alaska_native
            | :hispanic_or_latino
            | :two_or_more_races
            | :decline_to_specify

          module Ethnicity
            extend FinchAPI::Internal::Type::Enum

            ASIAN: :asian
            WHITE: :white
            BLACK_OR_AFRICAN_AMERICAN: :black_or_african_american
            NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER: :native_hawaiian_or_pacific_islander
            AMERICAN_INDIAN_OR_ALASKA_NATIVE: :american_indian_or_alaska_native
            HISPANIC_OR_LATINO: :hispanic_or_latino
            TWO_OR_MORE_RACES: :two_or_more_races
            DECLINE_TO_SPECIFY: :decline_to_specify

            def self?.values: -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::ethnicity]
          end

          type gender = :female | :male | :other | :decline_to_specify

          module Gender
            extend FinchAPI::Internal::Type::Enum

            FEMALE: :female
            MALE: :male
            OTHER: :other
            DECLINE_TO_SPECIFY: :decline_to_specify

            def self?.values: -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::gender]
          end

          type manager = { id: String }

          class Manager < FinchAPI::Internal::Type::BaseModel
            attr_reader id: String?

            def id=: (String) -> String

            def initialize: (?id: String) -> void
          end

          type phone_number =
            {
              data: String?,
              type: FinchAPI::Sandbox::DirectoryCreateParams::Body::PhoneNumber::type_?
            }

          class PhoneNumber < FinchAPI::Internal::Type::BaseModel
            attr_accessor data: String?

            attr_accessor type: FinchAPI::Sandbox::DirectoryCreateParams::Body::PhoneNumber::type_?

            def initialize: (
              ?data: String?,
              ?type: FinchAPI::Sandbox::DirectoryCreateParams::Body::PhoneNumber::type_?
            ) -> void

            type type_ = :work | :personal

            module Type
              extend FinchAPI::Internal::Type::Enum

              WORK: :work
              PERSONAL: :personal

              def self?.values: -> ::Array[FinchAPI::Sandbox::DirectoryCreateParams::Body::PhoneNumber::type_]
            end
          end
        end
      end
    end
  end
end
