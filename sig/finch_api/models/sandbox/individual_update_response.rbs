module FinchAPI
  module Models
    module Sandbox
      type individual_update_response =
        {
          id: String,
          dob: String?,
          emails: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email]?,
          encrypted_ssn: String?,
          ethnicity: FinchAPI::Models::Sandbox::IndividualUpdateResponse::ethnicity?,
          first_name: String?,
          gender: FinchAPI::Models::Sandbox::IndividualUpdateResponse::gender?,
          last_name: String?,
          middle_name: String?,
          phone_numbers: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber?]?,
          preferred_name: String?,
          residence: FinchAPI::Location?,
          ssn: String?
        }

      class IndividualUpdateResponse < FinchAPI::Internal::Type::BaseModel
        attr_reader id: String?

        def id=: (String) -> String

        attr_accessor dob: String?

        attr_accessor emails: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email]?

        attr_accessor encrypted_ssn: String?

        attr_accessor ethnicity: FinchAPI::Models::Sandbox::IndividualUpdateResponse::ethnicity?

        attr_accessor first_name: String?

        attr_accessor gender: FinchAPI::Models::Sandbox::IndividualUpdateResponse::gender?

        attr_accessor last_name: String?

        attr_accessor middle_name: String?

        attr_accessor phone_numbers: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber?]?

        attr_accessor preferred_name: String?

        attr_accessor residence: FinchAPI::Location?

        attr_accessor ssn: String?

        def initialize: (
          ?id: String,
          ?dob: String?,
          ?emails: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email]?,
          ?encrypted_ssn: String?,
          ?ethnicity: FinchAPI::Models::Sandbox::IndividualUpdateResponse::ethnicity?,
          ?first_name: String?,
          ?gender: FinchAPI::Models::Sandbox::IndividualUpdateResponse::gender?,
          ?last_name: String?,
          ?middle_name: String?,
          ?phone_numbers: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber?]?,
          ?preferred_name: String?,
          ?residence: FinchAPI::Location?,
          ?ssn: String?
        ) -> void

        def to_hash: -> {
          id: String,
          dob: String?,
          emails: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email]?,
          encrypted_ssn: String?,
          ethnicity: FinchAPI::Models::Sandbox::IndividualUpdateResponse::ethnicity?,
          first_name: String?,
          gender: FinchAPI::Models::Sandbox::IndividualUpdateResponse::gender?,
          last_name: String?,
          middle_name: String?,
          phone_numbers: ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber?]?,
          preferred_name: String?,
          residence: FinchAPI::Location?,
          ssn: String?
        }

        type email =
          {
            data: String,
            type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email::type_?
          }

        class Email < FinchAPI::Internal::Type::BaseModel
          attr_reader data: String?

          def data=: (String) -> String

          attr_accessor type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email::type_?

          def initialize: (
            ?data: String,
            ?type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email::type_?
          ) -> void

          def to_hash: -> {
            data: String,
            type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email::type_?
          }

          type type_ = :work | :personal

          module Type
            extend FinchAPI::Internal::Type::Enum

            WORK: :work
            PERSONAL: :personal

            def self?.values: -> ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::Email::type_]
          end
        end

        type ethnicity =
          :asian
          | :white
          | :black_or_african_american
          | :native_hawaiian_or_pacific_islander
          | :american_indian_or_alaska_native
          | :hispanic_or_latino
          | :two_or_more_races
          | :decline_to_specify

        module Ethnicity
          extend FinchAPI::Internal::Type::Enum

          ASIAN: :asian
          WHITE: :white
          BLACK_OR_AFRICAN_AMERICAN: :black_or_african_american
          NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER: :native_hawaiian_or_pacific_islander
          AMERICAN_INDIAN_OR_ALASKA_NATIVE: :american_indian_or_alaska_native
          HISPANIC_OR_LATINO: :hispanic_or_latino
          TWO_OR_MORE_RACES: :two_or_more_races
          DECLINE_TO_SPECIFY: :decline_to_specify

          def self?.values: -> ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::ethnicity]
        end

        type gender = :female | :male | :other | :decline_to_specify

        module Gender
          extend FinchAPI::Internal::Type::Enum

          FEMALE: :female
          MALE: :male
          OTHER: :other
          DECLINE_TO_SPECIFY: :decline_to_specify

          def self?.values: -> ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::gender]
        end

        type phone_number =
          {
            data: String?,
            type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber::type_?
          }

        class PhoneNumber < FinchAPI::Internal::Type::BaseModel
          attr_accessor data: String?

          attr_accessor type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber::type_?

          def initialize: (
            ?data: String?,
            ?type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber::type_?
          ) -> void

          def to_hash: -> {
            data: String?,
            type: FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber::type_?
          }

          type type_ = :work | :personal

          module Type
            extend FinchAPI::Internal::Type::Enum

            WORK: :work
            PERSONAL: :personal

            def self?.values: -> ::Array[FinchAPI::Models::Sandbox::IndividualUpdateResponse::PhoneNumber::type_]
          end
        end
      end
    end
  end
end
