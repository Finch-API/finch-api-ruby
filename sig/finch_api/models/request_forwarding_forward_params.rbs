module FinchAPI
  module Models
    type request_forwarding_forward_params =
      {
        method_: String,
        route: String,
        data: String?,
        headers: ::Hash[Symbol, top?]?,
        params: ::Hash[Symbol, top?]?
      }
      & FinchAPI::Internal::Type::request_parameters

    class RequestForwardingForwardParams < FinchAPI::Internal::Type::BaseModel
      extend FinchAPI::Internal::Type::RequestParameters::Converter
      include FinchAPI::Internal::Type::RequestParameters

      attr_accessor method_: String

      attr_accessor route: String

      attr_accessor data: String?

      attr_accessor headers: ::Hash[Symbol, top?]?

      attr_accessor params: ::Hash[Symbol, top?]?

      def initialize: (
        method_: String,
        route: String,
        ?data: String?,
        ?headers: ::Hash[Symbol, top?]?,
        ?params: ::Hash[Symbol, top?]?,
        ?request_options: FinchAPI::request_opts
      ) -> void

      def to_hash: -> {
        method_: String,
        route: String,
        data: String?,
        headers: ::Hash[Symbol, top?]?,
        params: ::Hash[Symbol, top?]?,
        request_options: FinchAPI::RequestOptions
      }
    end
  end
end
