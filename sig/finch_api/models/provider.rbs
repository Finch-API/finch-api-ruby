module FinchAPI
  module Models
    type provider =
      {
        id: String,
        authentication_methods: ::Array[FinchAPI::Models::Provider::AuthenticationMethod],
        beta: bool,
        display_name: String,
        icon: String,
        logo: String,
        manual: bool,
        mfa_required: bool,
        primary_color: String,
        products: ::Array[String]
      }

    class Provider < FinchAPI::BaseModel
      attr_reader id: String?

      def id=: (String) -> String

      attr_reader authentication_methods: ::Array[FinchAPI::Models::Provider::AuthenticationMethod]?

      def authentication_methods=: (
        ::Array[FinchAPI::Models::Provider::AuthenticationMethod]
      ) -> ::Array[FinchAPI::Models::Provider::AuthenticationMethod]

      attr_reader beta: bool?

      def beta=: (bool) -> bool

      attr_reader display_name: String?

      def display_name=: (String) -> String

      attr_reader icon: String?

      def icon=: (String) -> String

      attr_reader logo: String?

      def logo=: (String) -> String

      attr_reader manual: bool?

      def manual=: (bool) -> bool

      attr_reader mfa_required: bool?

      def mfa_required=: (bool) -> bool

      attr_reader primary_color: String?

      def primary_color=: (String) -> String

      attr_reader products: ::Array[String]?

      def products=: (::Array[String]) -> ::Array[String]

      def initialize: (
        ?id: String,
        ?authentication_methods: ::Array[FinchAPI::Models::Provider::AuthenticationMethod],
        ?beta: bool,
        ?display_name: String,
        ?icon: String,
        ?logo: String,
        ?manual: bool,
        ?mfa_required: bool,
        ?primary_color: String,
        ?products: ::Array[String]
      ) -> void

      def to_hash: -> FinchAPI::Models::provider

      type authentication_method =
        {
          benefits_support: FinchAPI::Models::HRIS::BenefitsSupport?,
          supported_fields: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields?,
          type: FinchAPI::Models::Provider::AuthenticationMethod::type_
        }

      class AuthenticationMethod < FinchAPI::BaseModel
        attr_accessor benefits_support: FinchAPI::Models::HRIS::BenefitsSupport?

        attr_accessor supported_fields: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields?

        attr_reader type: FinchAPI::Models::Provider::AuthenticationMethod::type_?

        def type=: (
          FinchAPI::Models::Provider::AuthenticationMethod::type_
        ) -> FinchAPI::Models::Provider::AuthenticationMethod::type_

        def initialize: (
          ?benefits_support: FinchAPI::Models::HRIS::BenefitsSupport?,
          ?supported_fields: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields?,
          ?type: FinchAPI::Models::Provider::AuthenticationMethod::type_
        ) -> void

        def to_hash: -> FinchAPI::Models::Provider::authentication_method

        type supported_fields =
          {
            company: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company,
            directory: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory,
            employment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment,
            individual: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual,
            pay_group: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayGroup,
            pay_statement: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement,
            payment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment
          }

        class SupportedFields < FinchAPI::BaseModel
          attr_reader company: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company?

          def company=: (
            FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company
          ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company

          attr_reader directory: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory?

          def directory=: (
            FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory
          ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory

          attr_reader employment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment?

          def employment=: (
            FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment
          ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment

          attr_reader individual: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual?

          def individual=: (
            FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual
          ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual

          attr_reader pay_group: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayGroup?

          def pay_group=: (
            FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayGroup
          ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayGroup

          attr_reader pay_statement: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement?

          def pay_statement=: (
            FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement
          ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement

          attr_reader payment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment?

          def payment=: (
            FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment
          ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment

          def initialize: (
            ?company: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company,
            ?directory: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory,
            ?employment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment,
            ?individual: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual,
            ?pay_group: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayGroup,
            ?pay_statement: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement,
            ?payment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment
          ) -> void

          def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::supported_fields

          type company =
            {
              id: bool,
              accounts: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Accounts,
              departments: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments,
              ein: bool,
              entity: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Entity,
              legal_name: bool,
              locations: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Locations,
              primary_email: bool,
              primary_phone_number: bool
            }

          class Company < FinchAPI::BaseModel
            attr_reader id: bool?

            def id=: (bool) -> bool

            attr_reader accounts: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Accounts?

            def accounts=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Accounts
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Accounts

            attr_reader departments: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments?

            def departments=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments

            attr_reader ein: bool?

            def ein=: (bool) -> bool

            attr_reader entity: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Entity?

            def entity=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Entity
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Entity

            attr_reader legal_name: bool?

            def legal_name=: (bool) -> bool

            attr_reader locations: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Locations?

            def locations=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Locations
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Locations

            attr_reader primary_email: bool?

            def primary_email=: (bool) -> bool

            attr_reader primary_phone_number: bool?

            def primary_phone_number=: (bool) -> bool

            def initialize: (
              ?id: bool,
              ?accounts: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Accounts,
              ?departments: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments,
              ?ein: bool,
              ?entity: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Entity,
              ?legal_name: bool,
              ?locations: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Locations,
              ?primary_email: bool,
              ?primary_phone_number: bool
            ) -> void

            def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::company

            type accounts =
              {
                account_name: bool,
                account_number: bool,
                account_type: bool,
                institution_name: bool,
                routing_number: bool
              }

            class Accounts < FinchAPI::BaseModel
              attr_reader account_name: bool?

              def account_name=: (bool) -> bool

              attr_reader account_number: bool?

              def account_number=: (bool) -> bool

              attr_reader account_type: bool?

              def account_type=: (bool) -> bool

              attr_reader institution_name: bool?

              def institution_name=: (bool) -> bool

              attr_reader routing_number: bool?

              def routing_number=: (bool) -> bool

              def initialize: (
                ?account_name: bool,
                ?account_number: bool,
                ?account_type: bool,
                ?institution_name: bool,
                ?routing_number: bool
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::accounts
            end

            type departments =
              {
                name: bool,
                parent: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments::Parent
              }

            class Departments < FinchAPI::BaseModel
              attr_reader name: bool?

              def name=: (bool) -> bool

              attr_reader parent: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments::Parent?

              def parent=: (
                FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments::Parent
              ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments::Parent

              def initialize: (
                ?name: bool,
                ?parent: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments::Parent
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::departments

              type parent = { name: bool }

              class Parent < FinchAPI::BaseModel
                attr_reader name: bool?

                def name=: (bool) -> bool

                def initialize: (?name: bool) -> void

                def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::Departments::parent
              end
            end

            type entity = { subtype: bool, type: bool }

            class Entity < FinchAPI::BaseModel
              attr_reader subtype: bool?

              def subtype=: (bool) -> bool

              attr_reader type: bool?

              def type=: (bool) -> bool

              def initialize: (?subtype: bool, ?type: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::entity
            end

            type locations =
              {
                city: bool,
                country: bool,
                :line1 => bool,
                :line2 => bool,
                postal_code: bool,
                state: bool
              }

            class Locations < FinchAPI::BaseModel
              attr_reader city: bool?

              def city=: (bool) -> bool

              attr_reader country: bool?

              def country=: (bool) -> bool

              attr_reader line1: bool?

              def line1=: (bool) -> bool

              attr_reader line2: bool?

              def line2=: (bool) -> bool

              attr_reader postal_code: bool?

              def postal_code=: (bool) -> bool

              attr_reader state: bool?

              def state=: (bool) -> bool

              def initialize: (
                ?city: bool,
                ?country: bool,
                ?line1: bool,
                ?line2: bool,
                ?postal_code: bool,
                ?state: bool
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Company::locations
            end
          end

          type directory =
            {
              individuals: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals,
              paging: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Paging
            }

          class Directory < FinchAPI::BaseModel
            attr_reader individuals: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals?

            def individuals=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals

            attr_reader paging: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Paging?

            def paging=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Paging
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Paging

            def initialize: (
              ?individuals: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals,
              ?paging: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Paging
            ) -> void

            def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::directory

            type individuals =
              {
                id: bool,
                department: bool,
                first_name: bool,
                is_active: bool,
                last_name: bool,
                manager: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals::Manager,
                middle_name: bool
              }

            class Individuals < FinchAPI::BaseModel
              attr_reader id: bool?

              def id=: (bool) -> bool

              attr_reader department: bool?

              def department=: (bool) -> bool

              attr_reader first_name: bool?

              def first_name=: (bool) -> bool

              attr_reader is_active: bool?

              def is_active=: (bool) -> bool

              attr_reader last_name: bool?

              def last_name=: (bool) -> bool

              attr_reader manager: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals::Manager?

              def manager=: (
                FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals::Manager
              ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals::Manager

              attr_reader middle_name: bool?

              def middle_name=: (bool) -> bool

              def initialize: (
                ?id: bool,
                ?department: bool,
                ?first_name: bool,
                ?is_active: bool,
                ?last_name: bool,
                ?manager: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals::Manager,
                ?middle_name: bool
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::individuals

              type manager = { id: bool }

              class Manager < FinchAPI::BaseModel
                attr_reader id: bool?

                def id=: (bool) -> bool

                def initialize: (?id: bool) -> void

                def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::Individuals::manager
              end
            end

            type paging = { count: bool, offset: bool }

            class Paging < FinchAPI::BaseModel
              attr_reader count: bool?

              def count=: (bool) -> bool

              attr_reader offset: bool?

              def offset=: (bool) -> bool

              def initialize: (?count: bool, ?offset: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Directory::paging
            end
          end

          type employment =
            {
              id: bool,
              class_code: bool,
              custom_fields: bool,
              department: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Department,
              employment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Employment,
              employment_status: bool,
              end_date: bool,
              first_name: bool,
              income: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Income,
              income_history: bool,
              is_active: bool,
              last_name: bool,
              location: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Location,
              manager: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Manager,
              middle_name: bool,
              start_date: bool,
              title: bool
            }

          class Employment < FinchAPI::BaseModel
            attr_reader id: bool?

            def id=: (bool) -> bool

            attr_reader class_code: bool?

            def class_code=: (bool) -> bool

            attr_reader custom_fields: bool?

            def custom_fields=: (bool) -> bool

            attr_reader department: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Department?

            def department=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Department
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Department

            attr_reader employment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Employment?

            def employment=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Employment
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Employment

            attr_reader employment_status: bool?

            def employment_status=: (bool) -> bool

            attr_reader end_date: bool?

            def end_date=: (bool) -> bool

            attr_reader first_name: bool?

            def first_name=: (bool) -> bool

            attr_reader income: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Income?

            def income=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Income
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Income

            attr_reader income_history: bool?

            def income_history=: (bool) -> bool

            attr_reader is_active: bool?

            def is_active=: (bool) -> bool

            attr_reader last_name: bool?

            def last_name=: (bool) -> bool

            attr_reader location: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Location?

            def location=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Location
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Location

            attr_reader manager: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Manager?

            def manager=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Manager
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Manager

            attr_reader middle_name: bool?

            def middle_name=: (bool) -> bool

            attr_reader start_date: bool?

            def start_date=: (bool) -> bool

            attr_reader title: bool?

            def title=: (bool) -> bool

            def initialize: (
              ?id: bool,
              ?class_code: bool,
              ?custom_fields: bool,
              ?department: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Department,
              ?employment: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Employment,
              ?employment_status: bool,
              ?end_date: bool,
              ?first_name: bool,
              ?income: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Income,
              ?income_history: bool,
              ?is_active: bool,
              ?last_name: bool,
              ?location: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Location,
              ?manager: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::Manager,
              ?middle_name: bool,
              ?start_date: bool,
              ?title: bool
            ) -> void

            def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::employment

            type department = { name: bool }

            class Department < FinchAPI::BaseModel
              attr_reader name: bool?

              def name=: (bool) -> bool

              def initialize: (?name: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::department
            end

            type employment = { subtype: bool, type: bool }

            class Employment < FinchAPI::BaseModel
              attr_reader subtype: bool?

              def subtype=: (bool) -> bool

              attr_reader type: bool?

              def type=: (bool) -> bool

              def initialize: (?subtype: bool, ?type: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::employment
            end

            type income = { amount: bool, currency: bool, unit: bool }

            class Income < FinchAPI::BaseModel
              attr_reader amount: bool?

              def amount=: (bool) -> bool

              attr_reader currency: bool?

              def currency=: (bool) -> bool

              attr_reader unit: bool?

              def unit=: (bool) -> bool

              def initialize: (
                ?amount: bool,
                ?currency: bool,
                ?unit: bool
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::income
            end

            type location =
              {
                city: bool,
                country: bool,
                :line1 => bool,
                :line2 => bool,
                postal_code: bool,
                state: bool
              }

            class Location < FinchAPI::BaseModel
              attr_reader city: bool?

              def city=: (bool) -> bool

              attr_reader country: bool?

              def country=: (bool) -> bool

              attr_reader line1: bool?

              def line1=: (bool) -> bool

              attr_reader line2: bool?

              def line2=: (bool) -> bool

              attr_reader postal_code: bool?

              def postal_code=: (bool) -> bool

              attr_reader state: bool?

              def state=: (bool) -> bool

              def initialize: (
                ?city: bool,
                ?country: bool,
                ?line1: bool,
                ?line2: bool,
                ?postal_code: bool,
                ?state: bool
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::location
            end

            type manager = { id: bool }

            class Manager < FinchAPI::BaseModel
              attr_reader id: bool?

              def id=: (bool) -> bool

              def initialize: (?id: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Employment::manager
            end
          end

          type individual =
            {
              id: bool,
              dob: bool,
              emails: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Emails,
              encrypted_ssn: bool,
              ethnicity: bool,
              first_name: bool,
              gender: bool,
              last_name: bool,
              middle_name: bool,
              phone_numbers: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::PhoneNumbers,
              preferred_name: bool,
              residence: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Residence,
              ssn: bool
            }

          class Individual < FinchAPI::BaseModel
            attr_reader id: bool?

            def id=: (bool) -> bool

            attr_reader dob: bool?

            def dob=: (bool) -> bool

            attr_reader emails: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Emails?

            def emails=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Emails
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Emails

            attr_reader encrypted_ssn: bool?

            def encrypted_ssn=: (bool) -> bool

            attr_reader ethnicity: bool?

            def ethnicity=: (bool) -> bool

            attr_reader first_name: bool?

            def first_name=: (bool) -> bool

            attr_reader gender: bool?

            def gender=: (bool) -> bool

            attr_reader last_name: bool?

            def last_name=: (bool) -> bool

            attr_reader middle_name: bool?

            def middle_name=: (bool) -> bool

            attr_reader phone_numbers: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::PhoneNumbers?

            def phone_numbers=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::PhoneNumbers
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::PhoneNumbers

            attr_reader preferred_name: bool?

            def preferred_name=: (bool) -> bool

            attr_reader residence: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Residence?

            def residence=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Residence
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Residence

            attr_reader ssn: bool?

            def ssn=: (bool) -> bool

            def initialize: (
              ?id: bool,
              ?dob: bool,
              ?emails: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Emails,
              ?encrypted_ssn: bool,
              ?ethnicity: bool,
              ?first_name: bool,
              ?gender: bool,
              ?last_name: bool,
              ?middle_name: bool,
              ?phone_numbers: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::PhoneNumbers,
              ?preferred_name: bool,
              ?residence: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::Residence,
              ?ssn: bool
            ) -> void

            def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::individual

            type emails = { data: bool, type: bool }

            class Emails < FinchAPI::BaseModel
              attr_reader data: bool?

              def data=: (bool) -> bool

              attr_reader type: bool?

              def type=: (bool) -> bool

              def initialize: (?data: bool, ?type: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::emails
            end

            type phone_numbers = { data: bool, type: bool }

            class PhoneNumbers < FinchAPI::BaseModel
              attr_reader data: bool?

              def data=: (bool) -> bool

              attr_reader type: bool?

              def type=: (bool) -> bool

              def initialize: (?data: bool, ?type: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::phone_numbers
            end

            type residence =
              {
                city: bool,
                country: bool,
                :line1 => bool,
                :line2 => bool,
                postal_code: bool,
                state: bool
              }

            class Residence < FinchAPI::BaseModel
              attr_reader city: bool?

              def city=: (bool) -> bool

              attr_reader country: bool?

              def country=: (bool) -> bool

              attr_reader line1: bool?

              def line1=: (bool) -> bool

              attr_reader line2: bool?

              def line2=: (bool) -> bool

              attr_reader postal_code: bool?

              def postal_code=: (bool) -> bool

              attr_reader state: bool?

              def state=: (bool) -> bool

              def initialize: (
                ?city: bool,
                ?country: bool,
                ?line1: bool,
                ?line2: bool,
                ?postal_code: bool,
                ?state: bool
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Individual::residence
            end
          end

          type pay_group =
            {
              id: bool,
              individual_ids: bool,
              name: bool,
              pay_frequencies: bool
            }

          class PayGroup < FinchAPI::BaseModel
            attr_reader id: bool?

            def id=: (bool) -> bool

            attr_reader individual_ids: bool?

            def individual_ids=: (bool) -> bool

            attr_reader name: bool?

            def name=: (bool) -> bool

            attr_reader pay_frequencies: bool?

            def pay_frequencies=: (bool) -> bool

            def initialize: (
              ?id: bool,
              ?individual_ids: bool,
              ?name: bool,
              ?pay_frequencies: bool
            ) -> void

            def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::pay_group
          end

          type pay_statement =
            {
              paging: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::Paging,
              pay_statements: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements
            }

          class PayStatement < FinchAPI::BaseModel
            attr_reader paging: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::Paging?

            def paging=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::Paging
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::Paging

            attr_reader pay_statements: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements?

            def pay_statements=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements

            def initialize: (
              ?paging: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::Paging,
              ?pay_statements: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements
            ) -> void

            def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::pay_statement

            type paging = { count: bool, offset: bool }

            class Paging < FinchAPI::BaseModel
              attr_accessor count: bool

              attr_accessor offset: bool

              def initialize: (count: bool, offset: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::paging
            end

            type pay_statements =
              {
                earnings: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Earnings,
                employee_deductions: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployeeDeductions,
                employer_contributions: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployerContributions,
                gross_pay: bool,
                individual_id: bool,
                net_pay: bool,
                payment_method: bool,
                taxes: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Taxes,
                total_hours: bool,
                type: bool
              }

            class PayStatements < FinchAPI::BaseModel
              attr_reader earnings: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Earnings?

              def earnings=: (
                FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Earnings
              ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Earnings

              attr_reader employee_deductions: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployeeDeductions?

              def employee_deductions=: (
                FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployeeDeductions
              ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployeeDeductions

              attr_reader employer_contributions: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployerContributions?

              def employer_contributions=: (
                FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployerContributions
              ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployerContributions

              attr_reader gross_pay: bool?

              def gross_pay=: (bool) -> bool

              attr_reader individual_id: bool?

              def individual_id=: (bool) -> bool

              attr_reader net_pay: bool?

              def net_pay=: (bool) -> bool

              attr_reader payment_method: bool?

              def payment_method=: (bool) -> bool

              attr_reader taxes: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Taxes?

              def taxes=: (
                FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Taxes
              ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Taxes

              attr_reader total_hours: bool?

              def total_hours=: (bool) -> bool

              attr_reader type: bool?

              def type=: (bool) -> bool

              def initialize: (
                ?earnings: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Earnings,
                ?employee_deductions: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployeeDeductions,
                ?employer_contributions: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::EmployerContributions,
                ?gross_pay: bool,
                ?individual_id: bool,
                ?net_pay: bool,
                ?payment_method: bool,
                ?taxes: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::Taxes,
                ?total_hours: bool,
                ?type: bool
              ) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::pay_statements

              type earnings =
                { amount: bool, currency: bool, name: bool, type: bool }

              class Earnings < FinchAPI::BaseModel
                attr_reader amount: bool?

                def amount=: (bool) -> bool

                attr_reader currency: bool?

                def currency=: (bool) -> bool

                attr_reader name: bool?

                def name=: (bool) -> bool

                attr_reader type: bool?

                def type=: (bool) -> bool

                def initialize: (
                  ?amount: bool,
                  ?currency: bool,
                  ?name: bool,
                  ?type: bool
                ) -> void

                def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::earnings
              end

              type employee_deductions =
                {
                  amount: bool,
                  currency: bool,
                  name: bool,
                  pre_tax: bool,
                  type: bool
                }

              class EmployeeDeductions < FinchAPI::BaseModel
                attr_reader amount: bool?

                def amount=: (bool) -> bool

                attr_reader currency: bool?

                def currency=: (bool) -> bool

                attr_reader name: bool?

                def name=: (bool) -> bool

                attr_reader pre_tax: bool?

                def pre_tax=: (bool) -> bool

                attr_reader type: bool?

                def type=: (bool) -> bool

                def initialize: (
                  ?amount: bool,
                  ?currency: bool,
                  ?name: bool,
                  ?pre_tax: bool,
                  ?type: bool
                ) -> void

                def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::employee_deductions
              end

              type employer_contributions =
                { amount: bool, currency: bool, name: bool }

              class EmployerContributions < FinchAPI::BaseModel
                attr_reader amount: bool?

                def amount=: (bool) -> bool

                attr_reader currency: bool?

                def currency=: (bool) -> bool

                attr_reader name: bool?

                def name=: (bool) -> bool

                def initialize: (
                  ?amount: bool,
                  ?currency: bool,
                  ?name: bool
                ) -> void

                def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::employer_contributions
              end

              type taxes =
                {
                  amount: bool,
                  currency: bool,
                  employer: bool,
                  name: bool,
                  type: bool
                }

              class Taxes < FinchAPI::BaseModel
                attr_reader amount: bool?

                def amount=: (bool) -> bool

                attr_reader currency: bool?

                def currency=: (bool) -> bool

                attr_reader employer: bool?

                def employer=: (bool) -> bool

                attr_reader name: bool?

                def name=: (bool) -> bool

                attr_reader type: bool?

                def type=: (bool) -> bool

                def initialize: (
                  ?amount: bool,
                  ?currency: bool,
                  ?employer: bool,
                  ?name: bool,
                  ?type: bool
                ) -> void

                def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::PayStatement::PayStatements::taxes
              end
            end
          end

          type payment =
            {
              id: bool,
              company_debit: bool,
              debit_date: bool,
              employee_taxes: bool,
              employer_taxes: bool,
              gross_pay: bool,
              individual_ids: bool,
              net_pay: bool,
              pay_date: bool,
              pay_frequencies: bool,
              pay_group_ids: bool,
              pay_period: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment::PayPeriod
            }

          class Payment < FinchAPI::BaseModel
            attr_reader id: bool?

            def id=: (bool) -> bool

            attr_reader company_debit: bool?

            def company_debit=: (bool) -> bool

            attr_reader debit_date: bool?

            def debit_date=: (bool) -> bool

            attr_reader employee_taxes: bool?

            def employee_taxes=: (bool) -> bool

            attr_reader employer_taxes: bool?

            def employer_taxes=: (bool) -> bool

            attr_reader gross_pay: bool?

            def gross_pay=: (bool) -> bool

            attr_reader individual_ids: bool?

            def individual_ids=: (bool) -> bool

            attr_reader net_pay: bool?

            def net_pay=: (bool) -> bool

            attr_reader pay_date: bool?

            def pay_date=: (bool) -> bool

            attr_reader pay_frequencies: bool?

            def pay_frequencies=: (bool) -> bool

            attr_reader pay_group_ids: bool?

            def pay_group_ids=: (bool) -> bool

            attr_reader pay_period: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment::PayPeriod?

            def pay_period=: (
              FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment::PayPeriod
            ) -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment::PayPeriod

            def initialize: (
              ?id: bool,
              ?company_debit: bool,
              ?debit_date: bool,
              ?employee_taxes: bool,
              ?employer_taxes: bool,
              ?gross_pay: bool,
              ?individual_ids: bool,
              ?net_pay: bool,
              ?pay_date: bool,
              ?pay_frequencies: bool,
              ?pay_group_ids: bool,
              ?pay_period: FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment::PayPeriod
            ) -> void

            def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::payment

            type pay_period = { end_date: bool, start_date: bool }

            class PayPeriod < FinchAPI::BaseModel
              attr_reader end_date: bool?

              def end_date=: (bool) -> bool

              attr_reader start_date: bool?

              def start_date=: (bool) -> bool

              def initialize: (?end_date: bool, ?start_date: bool) -> void

              def to_hash: -> FinchAPI::Models::Provider::AuthenticationMethod::SupportedFields::Payment::pay_period
            end
          end
        end

        type type_ =
          :assisted | :credential | :api_token | :api_credential | :oauth

        module Type
          extend FinchAPI::Enum

          ASSISTED: :assisted
          CREDENTIAL: :credential
          API_TOKEN: :api_token
          API_CREDENTIAL: :api_credential
          OAUTH: :oauth

          def self?.values: -> ::Array[FinchAPI::Models::Provider::AuthenticationMethod::type_]
        end
      end
    end
  end
end
