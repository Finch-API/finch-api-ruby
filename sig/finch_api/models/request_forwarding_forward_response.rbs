module FinchAPI
  module Models
    type request_forwarding_forward_response =
      {
        data: String?,
        headers: top?,
        request: FinchAPI::Models::RequestForwardingForwardResponse::Request,
        status_code: Integer
      }

    class RequestForwardingForwardResponse < FinchAPI::Internal::Type::BaseModel
      attr_accessor data: String?

      attr_accessor headers: top?

      attr_accessor request: FinchAPI::Models::RequestForwardingForwardResponse::Request

      attr_accessor status_code: Integer

      def initialize: (
        data: String?,
        headers: top?,
        request: FinchAPI::Models::RequestForwardingForwardResponse::Request,
        status_code: Integer
      ) -> void

      type request =
        {
          data: String?,
          headers: top?,
          method_: String,
          params: top?,
          route: String
        }

      class Request < FinchAPI::Internal::Type::BaseModel
        attr_accessor data: String?

        attr_accessor headers: top?

        attr_accessor method_: String

        attr_accessor params: top?

        attr_accessor route: String

        def initialize: (
          data: String?,
          headers: top?,
          method_: String,
          params: top?,
          route: String
        ) -> void
      end
    end
  end
end
