module FinchAPI
  module Models
    module HRIS
      module Company
        type pay_statement_item_list_response =
          {
            attributes: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::Attributes,
            category: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::category,
            name: String
          }

        class PayStatementItemListResponse < FinchAPI::Internal::Type::BaseModel
          attr_accessor attributes: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::Attributes

          attr_accessor category: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::category

          attr_accessor name: String

          def initialize: (
            attributes: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::Attributes,
            category: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::category,
            name: String
          ) -> void

          def to_hash: -> {
            attributes: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::Attributes,
            category: FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::category,
            name: String
          }

          type attributes =
            {
              metadata: ::Hash[Symbol, top?]?,
              employer: bool?,
              pre_tax: bool?,
              type: String?
            }

          class Attributes < FinchAPI::Internal::Type::BaseModel
            attr_accessor metadata: ::Hash[Symbol, top?]?

            attr_accessor employer: bool?

            attr_accessor pre_tax: bool?

            attr_accessor type: String?

            def initialize: (
              metadata: ::Hash[Symbol, top?]?,
              ?employer: bool?,
              ?pre_tax: bool?,
              ?type: String?
            ) -> void

            def to_hash: -> {
              metadata: ::Hash[Symbol, top?]?,
              employer: bool?,
              pre_tax: bool?,
              type: String?
            }
          end

          type category =
            :earnings | :taxes | :employee_deductions | :employer_contributions

          module Category
            extend FinchAPI::Internal::Type::Enum

            EARNINGS: :earnings
            TAXES: :taxes
            EMPLOYEE_DEDUCTIONS: :employee_deductions
            EMPLOYER_CONTRIBUTIONS: :employer_contributions

            def self?.values: -> ::Array[FinchAPI::Models::HRIS::Company::PayStatementItemListResponse::category]
          end
        end
      end
    end
  end
end
