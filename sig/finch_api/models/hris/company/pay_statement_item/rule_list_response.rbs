module FinchAPI
  module Models
    module HRIS
      module Company
        module PayStatementItem
          type rule_list_response =
            {
              id: String,
              attributes: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Attributes,
              conditions: ::Array[FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition],
              created_at: Time,
              effective_end_date: String?,
              effective_start_date: String?,
              entity_type: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::entity_type,
              priority: Integer,
              updated_at: Time
            }

          class RuleListResponse < FinchAPI::Internal::Type::BaseModel
            attr_reader id: String?

            def id=: (String) -> String

            attr_reader attributes: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Attributes?

            def attributes=: (
              FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Attributes
            ) -> FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Attributes

            attr_reader conditions: ::Array[FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition]?

            def conditions=: (
              ::Array[FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition]
            ) -> ::Array[FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition]

            attr_reader created_at: Time?

            def created_at=: (Time) -> Time

            attr_accessor effective_end_date: String?

            attr_accessor effective_start_date: String?

            attr_reader entity_type: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::entity_type?

            def entity_type=: (
              FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::entity_type
            ) -> FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::entity_type

            attr_reader priority: Integer?

            def priority=: (Integer) -> Integer

            attr_reader updated_at: Time?

            def updated_at=: (Time) -> Time

            def initialize: (
              ?id: String,
              ?attributes: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Attributes,
              ?conditions: ::Array[FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition],
              ?created_at: Time,
              ?effective_end_date: String?,
              ?effective_start_date: String?,
              ?entity_type: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::entity_type,
              ?priority: Integer,
              ?updated_at: Time
            ) -> void

            type attributes = { metadata: ::Hash[Symbol, top] }

            class Attributes < FinchAPI::Internal::Type::BaseModel
              attr_reader metadata: ::Hash[Symbol, top]?

              def metadata=: (::Hash[Symbol, top]) -> ::Hash[Symbol, top]

              def initialize: (?metadata: ::Hash[Symbol, top]) -> void
            end

            type condition =
              {
                field: String,
                operator: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition::operator,
                value: String
              }

            class Condition < FinchAPI::Internal::Type::BaseModel
              attr_reader field: String?

              def field=: (String) -> String

              attr_reader operator: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition::operator?

              def operator=: (
                FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition::operator
              ) -> FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition::operator

              attr_reader value: String?

              def value=: (String) -> String

              def initialize: (
                ?field: String,
                ?operator: FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition::operator,
                ?value: String
              ) -> void

              type operator = :equals

              module Operator
                extend FinchAPI::Internal::Type::Enum

                EQUALS: :equals

                def self?.values: -> ::Array[FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::Condition::operator]
              end
            end

            type entity_type = :pay_statement_item

            module EntityType
              extend FinchAPI::Internal::Type::Enum

              PAY_STATEMENT_ITEM: :pay_statement_item

              def self?.values: -> ::Array[FinchAPI::Models::HRIS::Company::PayStatementItem::RuleListResponse::entity_type]
            end
          end
        end
      end
    end
  end
end
