module FinchAPI
  module Models
    module HRIS
      type pay_statement_retrieve_many_params =
        {
          requests: ::Array[FinchAPI::Models::HRIS::PayStatementRetrieveManyParams::Request]
        }
        & FinchAPI::Internal::Type::request_parameters

      class PayStatementRetrieveManyParams < FinchAPI::BaseModel
        extend FinchAPI::Internal::Type::RequestParameters::Converter
        include FinchAPI::Internal::Type::RequestParameters

        attr_accessor requests: ::Array[FinchAPI::Models::HRIS::PayStatementRetrieveManyParams::Request]

        def initialize: (
          requests: ::Array[FinchAPI::Models::HRIS::PayStatementRetrieveManyParams::Request],
          ?request_options: FinchAPI::request_opts
        ) -> void

        def to_hash: -> FinchAPI::Models::HRIS::pay_statement_retrieve_many_params

        type request = { payment_id: String, limit: Integer, offset: Integer }

        class Request < FinchAPI::BaseModel
          attr_accessor payment_id: String

          attr_reader limit: Integer?

          def limit=: (Integer) -> Integer

          attr_reader offset: Integer?

          def offset=: (Integer) -> Integer

          def initialize: (
            payment_id: String,
            ?limit: Integer,
            ?offset: Integer
          ) -> void

          def to_hash: -> FinchAPI::Models::HRIS::PayStatementRetrieveManyParams::request
        end
      end
    end
  end
end
