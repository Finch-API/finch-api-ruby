module FinchAPI
  module Models
    module HRIS
      type w42005 =
        {
          data: FinchAPI::HRIS::W42005::Data,
          type: FinchAPI::HRIS::W42005::type_,
          year: Float?
        }

      class W42005 < FinchAPI::Internal::Type::BaseModel
        attr_reader data: FinchAPI::HRIS::W42005::Data?

        def data=: (
          FinchAPI::HRIS::W42005::Data
        ) -> FinchAPI::HRIS::W42005::Data

        attr_reader type: FinchAPI::HRIS::W42005::type_?

        def type=: (
          FinchAPI::HRIS::W42005::type_
        ) -> FinchAPI::HRIS::W42005::type_

        attr_accessor year: Float?

        def initialize: (
          ?data: FinchAPI::HRIS::W42005::Data,
          ?type: FinchAPI::HRIS::W42005::type_,
          ?year: Float?
        ) -> void

        type data =
          {
            additional_withholding: Integer?,
            exemption: FinchAPI::HRIS::W42005::Data::exemption,
            filing_status: FinchAPI::HRIS::W42005::Data::filing_status?,
            individual_id: String,
            total_number_of_allowances: Integer?
          }

        class Data < FinchAPI::Internal::Type::BaseModel
          attr_accessor additional_withholding: Integer?

          attr_reader exemption: FinchAPI::HRIS::W42005::Data::exemption?

          def exemption=: (
            FinchAPI::HRIS::W42005::Data::exemption
          ) -> FinchAPI::HRIS::W42005::Data::exemption

          attr_accessor filing_status: FinchAPI::HRIS::W42005::Data::filing_status?

          attr_reader individual_id: String?

          def individual_id=: (String) -> String

          attr_accessor total_number_of_allowances: Integer?

          def initialize: (
            ?additional_withholding: Integer?,
            ?exemption: FinchAPI::HRIS::W42005::Data::exemption,
            ?filing_status: FinchAPI::HRIS::W42005::Data::filing_status?,
            ?individual_id: String,
            ?total_number_of_allowances: Integer?
          ) -> void

          type exemption = :exempt | :non_exempt

          module Exemption
            extend FinchAPI::Internal::Type::Enum

            EXEMPT: :exempt
            NON_EXEMPT: :non_exempt

            def self?.values: -> ::Array[FinchAPI::HRIS::W42005::Data::exemption]
          end

          type filing_status =
            :married | :married_but_withhold_at_higher_single_rate | :single

          module FilingStatus
            extend FinchAPI::Internal::Type::Enum

            MARRIED: :married
            MARRIED_BUT_WITHHOLD_AT_HIGHER_SINGLE_RATE: :married_but_withhold_at_higher_single_rate
            SINGLE: :single

            def self?.values: -> ::Array[FinchAPI::HRIS::W42005::Data::filing_status]
          end
        end

        type type_ = :w4_2005

        module Type
          extend FinchAPI::Internal::Type::Enum

          W4_2005: :w4_2005

          def self?.values: -> ::Array[FinchAPI::HRIS::W42005::type_]
        end
      end
    end
  end
end
