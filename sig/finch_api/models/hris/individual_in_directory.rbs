module FinchAPI
  module Models
    module HRIS
      type individual_in_directory =
        {
          id: String,
          department: FinchAPI::HRIS::IndividualInDirectory::Department?,
          first_name: String?,
          is_active: bool?,
          last_name: String?,
          manager: FinchAPI::HRIS::IndividualInDirectory::Manager?,
          middle_name: String?
        }

      class IndividualInDirectory < FinchAPI::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor department: FinchAPI::HRIS::IndividualInDirectory::Department?

        attr_accessor first_name: String?

        attr_accessor is_active: bool?

        attr_accessor last_name: String?

        attr_accessor manager: FinchAPI::HRIS::IndividualInDirectory::Manager?

        attr_accessor middle_name: String?

        def initialize: (
          id: String,
          department: FinchAPI::HRIS::IndividualInDirectory::Department?,
          first_name: String?,
          is_active: bool?,
          last_name: String?,
          manager: FinchAPI::HRIS::IndividualInDirectory::Manager?,
          middle_name: String?
        ) -> void

        type department = { name: String? }

        class Department < FinchAPI::Internal::Type::BaseModel
          attr_accessor name: String?

          def initialize: (?name: String?) -> void
        end

        type manager = { id: String }

        class Manager < FinchAPI::Internal::Type::BaseModel
          attr_accessor id: String

          def initialize: (id: String) -> void
        end
      end
    end
  end
end
