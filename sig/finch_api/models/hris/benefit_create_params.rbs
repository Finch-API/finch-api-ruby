module FinchAPI
  module Models
    module HRIS
      type benefit_create_params =
        {
          company_contribution: FinchAPI::HRIS::BenefitCreateParams::CompanyContribution?,
          description: String,
          frequency: FinchAPI::Models::HRIS::benefit_frequency?,
          type: FinchAPI::Models::HRIS::benefit_type?
        }
        & FinchAPI::Internal::Type::request_parameters

      class BenefitCreateParams < FinchAPI::Internal::Type::BaseModel
        extend FinchAPI::Internal::Type::RequestParameters::Converter
        include FinchAPI::Internal::Type::RequestParameters

        attr_accessor company_contribution: FinchAPI::HRIS::BenefitCreateParams::CompanyContribution?

        attr_reader description: String?

        def description=: (String) -> String

        attr_accessor frequency: FinchAPI::Models::HRIS::benefit_frequency?

        attr_accessor type: FinchAPI::Models::HRIS::benefit_type?

        def initialize: (
          ?company_contribution: FinchAPI::HRIS::BenefitCreateParams::CompanyContribution?,
          ?description: String,
          ?frequency: FinchAPI::Models::HRIS::benefit_frequency?,
          ?type: FinchAPI::Models::HRIS::benefit_type?,
          ?request_options: FinchAPI::request_opts
        ) -> void

        type company_contribution =
          {
            tiers: ::Array[FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::Tier],
            type: FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::type_
          }

        class CompanyContribution < FinchAPI::Internal::Type::BaseModel
          attr_reader tiers: ::Array[FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::Tier]?

          def tiers=: (
            ::Array[FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::Tier]
          ) -> ::Array[FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::Tier]

          attr_reader type: FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::type_?

          def type=: (
            FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::type_
          ) -> FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::type_

          def initialize: (
            ?tiers: ::Array[FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::Tier],
            ?type: FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::type_
          ) -> void

          type tier = { match: Integer, threshold: Integer }

          class Tier < FinchAPI::Internal::Type::BaseModel
            attr_reader match: Integer?

            def match=: (Integer) -> Integer

            attr_reader threshold: Integer?

            def threshold=: (Integer) -> Integer

            def initialize: (?match: Integer, ?threshold: Integer) -> void
          end

          type type_ = :match

          module Type
            extend FinchAPI::Internal::Type::Enum

            MATCH: :match

            def self?.values: -> ::Array[FinchAPI::HRIS::BenefitCreateParams::CompanyContribution::type_]
          end
        end
      end
    end
  end
end
