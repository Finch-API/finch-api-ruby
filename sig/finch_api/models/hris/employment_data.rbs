module FinchAPI
  module Models
    module HRIS
      type employment_data =
        FinchAPI::HRIS::EmploymentData::UnionMember0
        | FinchAPI::HRIS::EmploymentData::BatchError

      module EmploymentData
        extend FinchAPI::Internal::Type::Union

        type union_member0 =
          {
            id: String,
            class_code: String?,
            department: FinchAPI::HRIS::EmploymentData::UnionMember0::Department?,
            employment: FinchAPI::HRIS::EmploymentData::UnionMember0::Employment?,
            employment_status: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::employment_status?,
            end_date: String?,
            first_name: String?,
            is_active: bool?,
            last_name: String?,
            latest_rehire_date: String?,
            location: FinchAPI::Location?,
            manager: FinchAPI::HRIS::EmploymentData::UnionMember0::Manager?,
            middle_name: String?,
            start_date: String?,
            title: String?,
            custom_fields: ::Array[FinchAPI::HRIS::EmploymentData::UnionMember0::CustomField]?,
            income: FinchAPI::Income?,
            income_history: ::Array[FinchAPI::Income?]?,
            source_id: String?,
            work_id: String?
          }

        class UnionMember0 < FinchAPI::Internal::Type::BaseModel
          attr_accessor id: String

          attr_accessor class_code: String?

          attr_accessor department: FinchAPI::HRIS::EmploymentData::UnionMember0::Department?

          attr_accessor employment: FinchAPI::HRIS::EmploymentData::UnionMember0::Employment?

          attr_accessor employment_status: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::employment_status?

          attr_accessor end_date: String?

          attr_accessor first_name: String?

          attr_accessor is_active: bool?

          attr_accessor last_name: String?

          attr_accessor latest_rehire_date: String?

          attr_accessor location: FinchAPI::Location?

          attr_accessor manager: FinchAPI::HRIS::EmploymentData::UnionMember0::Manager?

          attr_accessor middle_name: String?

          attr_accessor start_date: String?

          attr_accessor title: String?

          attr_accessor custom_fields: ::Array[FinchAPI::HRIS::EmploymentData::UnionMember0::CustomField]?

          attr_accessor income: FinchAPI::Income?

          attr_accessor income_history: ::Array[FinchAPI::Income?]?

          attr_accessor source_id: String?

          attr_accessor work_id: String?

          def initialize: (
            id: String,
            class_code: String?,
            department: FinchAPI::HRIS::EmploymentData::UnionMember0::Department?,
            employment: FinchAPI::HRIS::EmploymentData::UnionMember0::Employment?,
            employment_status: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::employment_status?,
            end_date: String?,
            first_name: String?,
            is_active: bool?,
            last_name: String?,
            latest_rehire_date: String?,
            location: FinchAPI::Location?,
            manager: FinchAPI::HRIS::EmploymentData::UnionMember0::Manager?,
            middle_name: String?,
            start_date: String?,
            title: String?,
            ?custom_fields: ::Array[FinchAPI::HRIS::EmploymentData::UnionMember0::CustomField]?,
            ?income: FinchAPI::Income?,
            ?income_history: ::Array[FinchAPI::Income?]?,
            ?source_id: String?,
            ?work_id: String?
          ) -> void

          def to_hash: -> {
            id: String,
            class_code: String?,
            department: FinchAPI::HRIS::EmploymentData::UnionMember0::Department?,
            employment: FinchAPI::HRIS::EmploymentData::UnionMember0::Employment?,
            employment_status: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::employment_status?,
            end_date: String?,
            first_name: String?,
            is_active: bool?,
            last_name: String?,
            latest_rehire_date: String?,
            location: FinchAPI::Location?,
            manager: FinchAPI::HRIS::EmploymentData::UnionMember0::Manager?,
            middle_name: String?,
            start_date: String?,
            title: String?,
            custom_fields: ::Array[FinchAPI::HRIS::EmploymentData::UnionMember0::CustomField]?,
            income: FinchAPI::Income?,
            income_history: ::Array[FinchAPI::Income?]?,
            source_id: String?,
            work_id: String?
          }

          type department = { name: String? }

          class Department < FinchAPI::Internal::Type::BaseModel
            attr_accessor name: String?

            def initialize: (name: String?) -> void

            def to_hash: -> { name: String? }
          end

          type employment =
            {
              subtype: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::subtype?,
              type: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::type_?
            }

          class Employment < FinchAPI::Internal::Type::BaseModel
            attr_accessor subtype: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::subtype?

            attr_accessor type: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::type_?

            def initialize: (
              subtype: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::subtype?,
              type: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::type_?
            ) -> void

            def to_hash: -> {
              subtype: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::subtype?,
              type: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::type_?
            }

            type subtype =
              :full_time
              | :intern
              | :part_time
              | :temp
              | :seasonal
              | :individual_contractor

            module Subtype
              extend FinchAPI::Internal::Type::Enum

              FULL_TIME: :full_time
              INTERN: :intern
              PART_TIME: :part_time
              TEMP: :temp
              SEASONAL: :seasonal
              INDIVIDUAL_CONTRACTOR: :individual_contractor

              def self?.values: -> ::Array[FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::subtype]
            end

            type type_ = :employee | :contractor

            module Type
              extend FinchAPI::Internal::Type::Enum

              EMPLOYEE: :employee
              CONTRACTOR: :contractor

              def self?.values: -> ::Array[FinchAPI::Models::HRIS::EmploymentData::UnionMember0::Employment::type_]
            end
          end

          type employment_status =
            :active
            | :deceased
            | :leave
            | :onboarding
            | :prehire
            | :retired
            | :terminated

          module EmploymentStatus
            extend FinchAPI::Internal::Type::Enum

            ACTIVE: :active
            DECEASED: :deceased
            LEAVE: :leave
            ONBOARDING: :onboarding
            PREHIRE: :prehire
            RETIRED: :retired
            TERMINATED: :terminated

            def self?.values: -> ::Array[FinchAPI::Models::HRIS::EmploymentData::UnionMember0::employment_status]
          end

          type manager = { id: String }

          class Manager < FinchAPI::Internal::Type::BaseModel
            attr_accessor id: String

            def initialize: (id: String) -> void

            def to_hash: -> { id: String }
          end

          type custom_field =
            {
              name: String?,
              value: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::CustomField::value?
            }

          class CustomField < FinchAPI::Internal::Type::BaseModel
            attr_accessor name: String?

            attr_accessor value: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::CustomField::value?

            def initialize: (
              ?name: String?,
              ?value: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::CustomField::value?
            ) -> void

            def to_hash: -> {
              name: String?,
              value: FinchAPI::Models::HRIS::EmploymentData::UnionMember0::CustomField::value?
            }

            type value = (String | ::Array[top] | top | Float | bool)?

            module Value
              extend FinchAPI::Internal::Type::Union

              def self?.variants: -> ::Array[FinchAPI::Models::HRIS::EmploymentData::UnionMember0::CustomField::value]

              UnionMember1Array: FinchAPI::Internal::Type::Converter
            end
          end
        end

        type batch_error =
          { code: Float, message: String, name: String, finch_code: String }

        class BatchError < FinchAPI::Internal::Type::BaseModel
          attr_accessor code: Float

          attr_accessor message: String

          attr_accessor name: String

          attr_reader finch_code: String?

          def finch_code=: (String) -> String

          def initialize: (
            code: Float,
            message: String,
            name: String,
            ?finch_code: String
          ) -> void

          def to_hash: -> {
            code: Float,
            message: String,
            name: String,
            finch_code: String
          }
        end

        def self?.variants: -> ::Array[FinchAPI::Models::HRIS::employment_data]
      end
    end
  end
end
