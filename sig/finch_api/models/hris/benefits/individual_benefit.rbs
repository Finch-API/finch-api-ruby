module FinchAPI
  module Models
    module HRIS
      class IndividualBenefit = Benefits::IndividualBenefit

      module Benefits
        type individual_benefit =
          {
            body: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::body,
            code: Integer,
            individual_id: String
          }

        class IndividualBenefit < FinchAPI::Internal::Type::BaseModel
          attr_accessor body: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::body

          attr_accessor code: Integer

          attr_accessor individual_id: String

          def initialize: (
            body: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::body,
            code: Integer,
            individual_id: String
          ) -> void

          def to_hash: -> {
            body: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::body,
            code: Integer,
            individual_id: String
          }

          type body =
            FinchAPI::HRIS::Benefits::IndividualBenefit::Body::UnionMember0
            | FinchAPI::HRIS::Benefits::IndividualBenefit::Body::BatchError

          module Body
            extend FinchAPI::Internal::Type::Union

            type union_member0 =
              {
                annual_maximum: Integer?,
                catch_up: bool?,
                company_contribution: FinchAPI::HRIS::BenefitContribution?,
                employee_deduction: FinchAPI::HRIS::BenefitContribution?,
                hsa_contribution_limit: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::Body::UnionMember0::hsa_contribution_limit?
              }

            class UnionMember0 < FinchAPI::Internal::Type::BaseModel
              attr_accessor annual_maximum: Integer?

              attr_accessor catch_up: bool?

              attr_accessor company_contribution: FinchAPI::HRIS::BenefitContribution?

              attr_accessor employee_deduction: FinchAPI::HRIS::BenefitContribution?

              attr_accessor hsa_contribution_limit: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::Body::UnionMember0::hsa_contribution_limit?

              def initialize: (
                annual_maximum: Integer?,
                catch_up: bool?,
                company_contribution: FinchAPI::HRIS::BenefitContribution?,
                employee_deduction: FinchAPI::HRIS::BenefitContribution?,
                ?hsa_contribution_limit: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::Body::UnionMember0::hsa_contribution_limit?
              ) -> void

              def to_hash: -> {
                annual_maximum: Integer?,
                catch_up: bool?,
                company_contribution: FinchAPI::HRIS::BenefitContribution?,
                employee_deduction: FinchAPI::HRIS::BenefitContribution?,
                hsa_contribution_limit: FinchAPI::Models::HRIS::Benefits::IndividualBenefit::Body::UnionMember0::hsa_contribution_limit?
              }

              type hsa_contribution_limit = :individual | :family

              module HsaContributionLimit
                extend FinchAPI::Internal::Type::Enum

                INDIVIDUAL: :individual
                FAMILY: :family

                def self?.values: -> ::Array[FinchAPI::Models::HRIS::Benefits::IndividualBenefit::Body::UnionMember0::hsa_contribution_limit]
              end
            end

            type batch_error =
              { code: Float, message: String, name: String, finch_code: String }

            class BatchError < FinchAPI::Internal::Type::BaseModel
              attr_accessor code: Float

              attr_accessor message: String

              attr_accessor name: String

              attr_reader finch_code: String?

              def finch_code=: (String) -> String

              def initialize: (
                code: Float,
                message: String,
                name: String,
                ?finch_code: String
              ) -> void

              def to_hash: -> {
                code: Float,
                message: String,
                name: String,
                finch_code: String
              }
            end

            def self?.variants: -> ::Array[FinchAPI::Models::HRIS::Benefits::IndividualBenefit::body]
          end
        end
      end
    end
  end
end
