module FinchAPI
  module Models
    module HRIS
      type pay_statement_response_body =
        {
          paging: FinchAPI::Models::Paging,
          pay_statements: ::Array[FinchAPI::Models::HRIS::PayStatement]
        }

      class PayStatementResponseBody < FinchAPI::BaseModel
        attr_reader paging: FinchAPI::Models::Paging?

        def paging=: (FinchAPI::Models::Paging) -> FinchAPI::Models::Paging

        attr_reader pay_statements: ::Array[FinchAPI::Models::HRIS::PayStatement]?

        def pay_statements=: (
          ::Array[FinchAPI::Models::HRIS::PayStatement]
        ) -> ::Array[FinchAPI::Models::HRIS::PayStatement]

        def initialize:
          (
            paging: FinchAPI::Models::Paging,
            pay_statements: ::Array[FinchAPI::Models::HRIS::PayStatement]
          ) -> void
          | (
            ?FinchAPI::Models::HRIS::pay_statement_response_body
            | FinchAPI::BaseModel data
          ) -> void

        def to_hash: -> FinchAPI::Models::HRIS::pay_statement_response_body
      end
    end
  end
end
