module FinchAPI
  module Models
    module HRIS
      type benefit_features_and_operations =
        {
          supported_features: FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures,
          supported_operations: FinchAPI::Models::HRIS::SupportPerBenefitType
        }

      class BenefitFeaturesAndOperations < FinchAPI::BaseModel
        attr_reader supported_features: FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures?

        def supported_features=: (
          FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures
        ) -> FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures

        attr_reader supported_operations: FinchAPI::Models::HRIS::SupportPerBenefitType?

        def supported_operations=: (
          FinchAPI::Models::HRIS::SupportPerBenefitType
        ) -> FinchAPI::Models::HRIS::SupportPerBenefitType

        def initialize: (
          ?supported_features: FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures,
          ?supported_operations: FinchAPI::Models::HRIS::SupportPerBenefitType
        ) -> void

        def to_hash: -> FinchAPI::Models::HRIS::benefit_features_and_operations

        type supported_features =
          {
            annual_maximum: bool?,
            catch_up: bool?,
            company_contribution: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::company_contribution?]?,
            description: String?,
            employee_deduction: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::employee_deduction?]?,
            frequencies: ::Array[FinchAPI::Models::HRIS::benefit_frequency?],
            hsa_contribution_limit: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::hsa_contribution_limit?]?
          }

        class SupportedFeatures < FinchAPI::BaseModel
          attr_accessor annual_maximum: bool?

          attr_accessor catch_up: bool?

          attr_accessor company_contribution: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::company_contribution?]?

          attr_accessor description: String?

          attr_accessor employee_deduction: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::employee_deduction?]?

          attr_reader frequencies: ::Array[FinchAPI::Models::HRIS::benefit_frequency?]?

          def frequencies=: (
            ::Array[FinchAPI::Models::HRIS::benefit_frequency?]
          ) -> ::Array[FinchAPI::Models::HRIS::benefit_frequency?]

          attr_accessor hsa_contribution_limit: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::hsa_contribution_limit?]?

          def initialize: (
            ?annual_maximum: bool?,
            ?catch_up: bool?,
            ?company_contribution: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::company_contribution?]?,
            ?description: String?,
            ?employee_deduction: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::employee_deduction?]?,
            ?frequencies: ::Array[FinchAPI::Models::HRIS::benefit_frequency?],
            ?hsa_contribution_limit: ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::hsa_contribution_limit?]?
          ) -> void

          def to_hash: -> FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::supported_features

          type company_contribution = :fixed | :percent

          module CompanyContribution
            extend FinchAPI::Enum

            FIXED: :fixed
            PERCENT: :percent

            def self.values: -> ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::company_contribution]
          end

          type employee_deduction = :fixed | :percent

          module EmployeeDeduction
            extend FinchAPI::Enum

            FIXED: :fixed
            PERCENT: :percent

            def self.values: -> ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::employee_deduction]
          end

          type hsa_contribution_limit = :individual | :family

          module HsaContributionLimit
            extend FinchAPI::Enum

            INDIVIDUAL: :individual
            FAMILY: :family

            def self.values: -> ::Array[FinchAPI::Models::HRIS::BenefitFeaturesAndOperations::SupportedFeatures::hsa_contribution_limit]
          end
        end
      end
    end
  end
end
