module FinchAPI
  module Models
    module Jobs
      type automated_async_job =
        {
          completed_at: Time?,
          created_at: Time,
          job_id: String,
          job_url: String,
          params: FinchAPI::Models::Jobs::AutomatedAsyncJob::Params?,
          scheduled_at: Time?,
          started_at: Time?,
          status: FinchAPI::Models::Jobs::AutomatedAsyncJob::status,
          type: FinchAPI::Models::Jobs::AutomatedAsyncJob::type_
        }

      class AutomatedAsyncJob < FinchAPI::BaseModel
        attr_accessor completed_at: Time?

        attr_accessor created_at: Time

        attr_accessor job_id: String

        attr_accessor job_url: String

        attr_accessor params: FinchAPI::Models::Jobs::AutomatedAsyncJob::Params?

        attr_accessor scheduled_at: Time?

        attr_accessor started_at: Time?

        attr_accessor status: FinchAPI::Models::Jobs::AutomatedAsyncJob::status

        attr_accessor type: FinchAPI::Models::Jobs::AutomatedAsyncJob::type_

        def initialize: (
          completed_at: Time?,
          created_at: Time,
          job_id: String,
          job_url: String,
          params: FinchAPI::Models::Jobs::AutomatedAsyncJob::Params?,
          scheduled_at: Time?,
          started_at: Time?,
          status: FinchAPI::Models::Jobs::AutomatedAsyncJob::status,
          type: FinchAPI::Models::Jobs::AutomatedAsyncJob::type_
        ) -> void

        def to_hash: -> FinchAPI::Models::Jobs::automated_async_job

        type params = { individual_id: String }

        class Params < FinchAPI::BaseModel
          attr_reader individual_id: String?

          def individual_id=: (String) -> String

          def initialize: (?individual_id: String) -> void

          def to_hash: -> FinchAPI::Models::Jobs::AutomatedAsyncJob::params
        end

        type status =
          :pending
          | :in_progress
          | :complete
          | :error
          | :reauth_error
          | :permissions_error

        class Status < FinchAPI::Enum
          PENDING: :pending
          IN_PROGRESS: :in_progress
          COMPLETE: :complete
          ERROR: :error
          REAUTH_ERROR: :reauth_error
          PERMISSIONS_ERROR: :permissions_error

          def self.values: -> ::Array[FinchAPI::Models::Jobs::AutomatedAsyncJob::status]
        end

        type type_ = :data_sync_all | :w4_form_employee_sync

        class Type < FinchAPI::Enum
          DATA_SYNC_ALL: :data_sync_all
          W4_FORM_EMPLOYEE_SYNC: :w4_form_employee_sync

          def self.values: -> ::Array[FinchAPI::Models::Jobs::AutomatedAsyncJob::type_]
        end
      end
    end
  end
end
